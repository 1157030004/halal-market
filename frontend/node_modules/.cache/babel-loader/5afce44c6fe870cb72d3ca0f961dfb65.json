{"ast":null,"code":"import _slicedToArray from\"G:\\\\code\\\\ecommerce\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import'./ProfileScreen.css';import React,{useState,useEffect}from'react';import{Link}from'react-router-dom';import{useDispatch,useSelector}from\"react-redux\";import Message from\"../components/Message\";import Loader from\"../components/Loader\";import FormContainer from\"../components/FormContainer\";import{getUserDetails,updateUserProfile}from\"../actions/userActions\";import\"./RegisterScreen.css\";import{Box,Button,Grid}from'@material-ui/core';import{ValidatorForm,TextValidator}from'react-material-ui-form-validator';import{listMyOrders}from\"../actions/orderActions\";import Table from'@material-ui/core/Table';import TableBody from'@material-ui/core/TableBody';import TableCell from'@material-ui/core/TableCell';import TableContainer from'@material-ui/core/TableContainer';import TableHead from'@material-ui/core/TableHead';import TableRow from'@material-ui/core/TableRow';import Paper from'@material-ui/core/Paper';import CancelRoundedIcon from'@material-ui/icons/CancelRounded';var ProfileScreen=function ProfileScreen(_ref){var location=_ref.location,history=_ref.history;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),password=_useState6[0],setPassword=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),confirmPassword=_useState8[0],setConfirmPassword=_useState8[1];var _useState9=useState(null),_useState10=_slicedToArray(_useState9,2),message=_useState10[0],setMessage=_useState10[1];var dispatch=useDispatch();var userDetails=useSelector(function(state){return state.userDetails;});var loading=userDetails.loading,error=userDetails.error,user=userDetails.user;var userLogin=useSelector(function(state){return state.userLogin;});var userInfo=userLogin.userInfo;var userUpdateProfile=useSelector(function(state){return state.userUpdateProfile;});var success=userUpdateProfile.success;var orderListMy=useSelector(function(state){return state.orderListMy;});var loadingOrders=orderListMy.loading,errorOrders=orderListMy.error,orders=orderListMy.orders;useEffect(function(){if(!userInfo){history.push('/login');}else{if(!user.name){dispatch(getUserDetails('profile'));dispatch(listMyOrders());}else{setName(user.name);setEmail(user.email);}}},[dispatch,history,userInfo,user]);var submitHandler=function submitHandler(e){e.preventDefault();if(password!==confirmPassword){setMessage(\"Passwords do not match\");}else{dispatch(updateUserProfile({id:user._id,name:name,email:email,password:password}));}};return/*#__PURE__*/React.createElement(Grid,{container:true,className:\"profile__container\"},/*#__PURE__*/React.createElement(Box,null,/*#__PURE__*/React.createElement(FormContainer,null,/*#__PURE__*/React.createElement(ValidatorForm,{onSubmit:submitHandler},/*#__PURE__*/React.createElement(\"h2\",null,\"User Profile\"),message&&/*#__PURE__*/React.createElement(Message,{severity:\"error\"},message),error&&/*#__PURE__*/React.createElement(Message,{severity:\"error\"},error),success&&/*#__PURE__*/React.createElement(Message,{severity:\"success\"},\"Profile Updated\"),loading&&/*#__PURE__*/React.createElement(Loader,null),/*#__PURE__*/React.createElement(TextValidator,{label:\"Full Name\",onChange:function onChange(e){return setName(e.target.value);},name:\"name\",value:name// validators={['required']}\n// errorMessages={['this field is required']}\n}),/*#__PURE__*/React.createElement(TextValidator,{label:\"Email\",onChange:function onChange(e){return setEmail(e.target.value);},name:\"email\",value:email// validators={['required', 'isEmail']}\n// errorMessages={['this field is required', 'email is not valid']}\n}),/*#__PURE__*/React.createElement(TextValidator,{label:\"Password\",onChange:function onChange(e){return setPassword(e.target.value);},name:\"password\",type:\"password\",value:password// validators={['required']}\n// errorMessages={['this field is required']}\n}),/*#__PURE__*/React.createElement(TextValidator,{label:\"Confirm Password\",onChange:function onChange(e){return setConfirmPassword(e.target.value);},name:\"confirmPassword\",type:\"password\",value:confirmPassword// validators={['isPasswordMatch', 'required']}\n// errorMessages={['password mismatch', 'this field is required']}\n}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Button,{color:\"secondary\",variant:\"contained\",type:\"submit\"},\"Update\")))),/*#__PURE__*/React.createElement(Box,null,/*#__PURE__*/React.createElement(\"h2\",null,\"My Orders\"),loadingOrders?/*#__PURE__*/React.createElement(Loader,null):errorOrders?/*#__PURE__*/React.createElement(Message,{severity:\"error\"},errorOrders):/*#__PURE__*/React.createElement(TableContainer,{component:Paper},/*#__PURE__*/React.createElement(Table,{className:\"myOrder__table\",\"aria-label\":\"simple table\"},/*#__PURE__*/React.createElement(TableHead,null,/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,null,\"Id\"),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},\"Date\"),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},\"Total\"),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},\"Paid\"),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},\"Delivered\"),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"}))),/*#__PURE__*/React.createElement(TableBody,null,orders.map(function(order){return/*#__PURE__*/React.createElement(TableRow,{key:order._id},/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},order._id),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},order.createdAt.substring(0,10)),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},order.totalPrice),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},order.isPaid?order.paidAt.substring(0,10):/*#__PURE__*/React.createElement(CancelRoundedIcon,null)),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},order.isDelivered?order.deliveredAt:/*#__PURE__*/React.createElement(CancelRoundedIcon,null)),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},/*#__PURE__*/React.createElement(Link,{to:\"/order/\".concat(order._id)},/*#__PURE__*/React.createElement(Button,{variant:\"contained\",size:\"small\"},\"Details\"))));}))))));};export default ProfileScreen;","map":{"version":3,"sources":["G:/code/ecommerce/frontend/src/screens/ProfileScreen.js"],"names":["React","useState","useEffect","Link","useDispatch","useSelector","Message","Loader","FormContainer","getUserDetails","updateUserProfile","Box","Button","Grid","ValidatorForm","TextValidator","listMyOrders","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","CancelRoundedIcon","ProfileScreen","location","history","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","dispatch","userDetails","state","loading","error","user","userLogin","userInfo","userUpdateProfile","success","orderListMy","loadingOrders","errorOrders","orders","push","submitHandler","e","preventDefault","id","_id","target","value","map","order","createdAt","substring","totalPrice","isPaid","paidAt","isDelivered","deliveredAt"],"mappings":"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","sourcesContent":["import './ProfileScreen.css'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport Message from \"../components/Message\"\r\nimport Loader from \"../components/Loader\"\r\nimport FormContainer from \"../components/FormContainer\"\r\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\"\r\nimport \"./RegisterScreen.css\"\r\nimport { Box, Button, Grid } from '@material-ui/core'\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport { listMyOrders } from \"../actions/orderActions\"\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport CancelRoundedIcon from '@material-ui/icons/CancelRounded';\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user.name) {\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (password !== confirmPassword) {\r\n            setMessage(\"Passwords do not match\")\r\n        } else {\r\n            dispatch(updateUserProfile({ id: user._id, name, email, password }))\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <Grid container className=\"profile__container\">\r\n            <Box>\r\n                <FormContainer>\r\n                    <ValidatorForm onSubmit={submitHandler}>\r\n                        <h2>User Profile</h2>\r\n                        {message && <Message severity='error'>{message}</Message>}\r\n                        {error && <Message severity='error'>{error}</Message>}\r\n                        {success && <Message severity='success'>Profile Updated</Message>}\r\n                        {loading && <Loader />}\r\n                        <TextValidator\r\n                            label=\"Full Name\"\r\n                            onChange={(e) => setName(e.target.value)}\r\n                            name=\"name\"\r\n                            value={name}\r\n                        // validators={['required']}\r\n                        // errorMessages={['this field is required']}\r\n                        ></TextValidator>\r\n\r\n                        <TextValidator\r\n                            label=\"Email\"\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                            name=\"email\"\r\n                            value={email}\r\n                        // validators={['required', 'isEmail']}\r\n                        // errorMessages={['this field is required', 'email is not valid']}\r\n                        ></TextValidator>\r\n\r\n                        <TextValidator\r\n                            label=\"Password\"\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            name=\"password\"\r\n                            type=\"password\"\r\n                            value={password}\r\n                        // validators={['required']}\r\n                        // errorMessages={['this field is required']}\r\n                        ></TextValidator>\r\n\r\n                        <TextValidator\r\n                            label=\"Confirm Password\"\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                            name=\"confirmPassword\"\r\n                            type=\"password\"\r\n                            value={confirmPassword}\r\n                        // validators={['isPasswordMatch', 'required']}\r\n                        // errorMessages={['password mismatch', 'this field is required']}\r\n                        ></TextValidator>\r\n                        <br />\r\n                        <Button\r\n                            color=\"secondary\"\r\n                            variant=\"contained\"\r\n                            type=\"submit\">\r\n                            Update\r\n                </Button>\r\n                    </ValidatorForm>\r\n                </FormContainer>\r\n            </Box>\r\n            <Box>\r\n                <h2>My Orders</h2>\r\n                {loadingOrders ? <Loader /> : errorOrders ? <Message severity=\"error\">\r\n                    {errorOrders}\r\n                </Message> : (\r\n                        <TableContainer component={Paper}>\r\n                        <Table className=\"myOrder__table\" aria-label=\"simple table\">\r\n                          <TableHead>\r\n                            <TableRow>\r\n                              <TableCell>Id</TableCell>\r\n                              <TableCell align=\"right\">Date</TableCell>\r\n                              <TableCell align=\"right\">Total</TableCell>\r\n                              <TableCell align=\"right\">Paid</TableCell>\r\n                              <TableCell align=\"right\">Delivered</TableCell>\r\n                              <TableCell align=\"right\"></TableCell>\r\n                            </TableRow>\r\n                          </TableHead>\r\n                          <TableBody>\r\n                            {orders.map((order) => (\r\n                              <TableRow key={order._id}>\r\n\r\n                                <TableCell align=\"right\">{order._id}</TableCell>\r\n                                <TableCell align=\"right\">{order.createdAt.substring(0,10)}</TableCell>\r\n                                <TableCell align=\"right\">{order.totalPrice}</TableCell>\r\n                                <TableCell align=\"right\">{order.isPaid ?  order.paidAt.substring(0,10) : (\r\n                                    <CancelRoundedIcon />\r\n                                )}</TableCell>\r\n                                <TableCell align=\"right\">{order.isDelivered ?  order.deliveredAt : (\r\n                                    <CancelRoundedIcon />\r\n                                )}</TableCell>\r\n                                <TableCell align=\"right\"><Link to={ `/order/${order._id}` }>\r\n                                <Button variant=\"contained\" size=\"small\">Details</Button>\r\n                                    </Link></TableCell>                   \r\n                                </TableRow>\r\n                            ))}\r\n                          </TableBody>\r\n                        </Table>\r\n                      </TableContainer>\r\n                )}\r\n            </Box>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n\r\n"]},"metadata":{},"sourceType":"module"}