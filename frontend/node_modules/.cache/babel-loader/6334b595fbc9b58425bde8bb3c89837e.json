{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { productListReducer, productDetailsReducer } from \"./reducers/productReducers\";\nimport { cartReducer } from \"./reducers/cartReducers\";\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer } from \"./reducers/userReducers\";\nimport { orderCreateReducer, orderDetailsReducer, orderListMyReducer, orderPayReducer } from \"./reducers/orderReducers\";\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer\n});\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [];\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\") ? JSON.parse(localStorage.getItem(\"shippingAddress\")) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["G:/code/ecommerce/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","orderCreateReducer","orderDetailsReducer","orderListMyReducer","orderPayReducer","reducer","productList","productDetails","cart","userLogin","userRegister","userDetails","userUpdateProfile","userList","orderCreate","orderDetails","orderPay","orderListMy","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,kBAAT,EAA6BC,qBAA7B,QAA0D,4BAA1D;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,gBAAT,EAA2BC,mBAA3B,EAAgDC,kBAAhD,EAAoEC,wBAApE,EAA8FC,eAA9F,QAAqH,yBAArH;AACA,SAASC,kBAAT,EAA6BC,mBAA7B,EAAkDC,kBAAlD,EAAsEC,eAAtE,QAA6F,0BAA7F;AAEA,MAAMC,OAAO,GAAGhB,eAAe,CAAC;AAC5BiB,EAAAA,WAAW,EAAEb,kBADe;AAE5Bc,EAAAA,cAAc,EAAEb,qBAFY;AAG5Bc,EAAAA,IAAI,EAAEb,WAHsB;AAI5Bc,EAAAA,SAAS,EAAEb,gBAJiB;AAK5Bc,EAAAA,YAAY,EAAEb,mBALc;AAM5Bc,EAAAA,WAAW,EAAEb,kBANe;AAO5Bc,EAAAA,iBAAiB,EAAEb,wBAPS;AAQ5Bc,EAAAA,QAAQ,EAAEb,eARkB;AAS5Bc,EAAAA,WAAW,EAAEb,kBATe;AAU5Bc,EAAAA,YAAY,EAAEb,mBAVc;AAW5Bc,EAAAA,QAAQ,EAAEZ,eAXkB;AAY5Ba,EAAAA,WAAW,EAAEd;AAZe,CAAD,CAA/B;AAeA,MAAMe,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAoCC,IAAI,CAACC,KAAL,CAC7DH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAD6D,CAApC,GAEzB,EAFJ;AAIA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IAAmCC,IAAI,CAACC,KAAL,CAC3DH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAD2D,CAAnC,GAExB,IAFJ;AAIA,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAA0CC,IAAI,CAACC,KAAL,CACzEH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CADyE,CAA1C,GAE/B,EAFJ;AAIA,MAAMK,YAAY,GAAG;AACjBjB,EAAAA,IAAI,EAAE;AAAEkB,IAAAA,SAAS,EAAER,oBAAb;AAAmCS,IAAAA,eAAe,EAAEH;AAApD,GADW;AAEjBf,EAAAA,SAAS,EAAE;AAAEmB,IAAAA,QAAQ,EAAEL;AAAZ;AAFM,CAArB;AAKA,MAAMM,UAAU,GAAG,CAACtC,KAAD,CAAnB;AAEA,MAAMuC,KAAK,GAAG1C,WAAW,CAACiB,OAAD,EAAUoB,YAAV,EAAwBjC,mBAAmB,CAChEF,eAAe,CAAC,GAAGuC,UAAJ,CADiD,CAA3C,CAAzB;AAIA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\nimport { composeWithDevTools } from \"redux-devtools-extension\"\r\nimport { productListReducer, productDetailsReducer } from \"./reducers/productReducers\"\r\nimport { cartReducer } from \"./reducers/cartReducers\"\r\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer } from \"./reducers/userReducers\"\r\nimport { orderCreateReducer, orderDetailsReducer, orderListMyReducer, orderPayReducer } from \"./reducers/orderReducers\"\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\") ? JSON.parse(\r\n    localStorage.getItem(\"cartItems\")\r\n) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(\r\n    localStorage.getItem(\"userInfo\")\r\n) : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\") ? JSON.parse(\r\n    localStorage.getItem(\"shippingAddress\")\r\n) : {}\r\n\r\nconst initialState = {\r\n    cart: { cartItems: cartItemsFromStorage, shippingAddress: shippingAddressFromStorage },\r\n    userLogin: { userInfo: userInfoFromStorage }\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState, composeWithDevTools(\r\n    applyMiddleware(...middleware)\r\n))\r\n\r\nexport default store"]},"metadata":{},"sourceType":"module"}