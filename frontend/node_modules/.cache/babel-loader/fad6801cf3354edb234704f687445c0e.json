{"ast":null,"code":"var _jsxFileName = \"G:\\\\code\\\\ecommerce\\\\frontend\\\\src\\\\screens\\\\ProductEditScreen.js\";\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport FormContainer from \"../components/FormContainer\";\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport \"./RegisterScreen.css\";\nimport { Button, FormControlLabel, Input, TextField } from '@material-ui/core';\nimport './ProductEditScreen.css';\nimport { listProductDetails, updateProduct } from \"../actions/productActions\";\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\n\nconst ProductEditScreen = ({\n  match,\n  history\n}) => {\n  const productId = match.params.id;\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState(0);\n  const [image, setImage] = useState('');\n  const [brand, setBrand] = useState('');\n  const [category, setCategory] = useState('');\n  const [countInStock, setCountInStock] = useState(0);\n  const [description, setDescription] = useState('');\n  const [uploading, setUploading] = useState(false);\n  const dispatch = useDispatch();\n  const productDetails = useSelector(state => state.productDetails);\n  const {\n    loading,\n    error,\n    product\n  } = productDetails;\n  const productUpdate = useSelector(state => state.productUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = productUpdate;\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: PRODUCT_UPDATE_RESET\n      });\n      history.push('/admin/productlist');\n    } else {\n      if (!product.name || product._id !== productId) {\n        dispatch(listProductDetails(productId));\n      } else {\n        setName(product.name);\n        setPrice(product.price);\n        setImage(product.image);\n        setBrand(product.brand);\n        setCategory(product.category);\n        setCountInStock(product.countInStock);\n        setDescription(product.description);\n      }\n    }\n  }, [dispatch, history, productId, product, successUpdate]);\n\n  const uploadFileHandler = async e => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append('image', file);\n    setUploading(true);\n\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      };\n      const {\n        data\n      } = await axios.post('/api/upload', formData, config);\n      setImage(data);\n      setUploading(false);\n    } catch (error) {\n      console.error(error);\n      setUploading(false);\n    }\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(updateProduct({\n      _id: productId,\n      name,\n      price,\n      image,\n      brand,\n      category,\n      description,\n      countInStock\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"userEdit__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/admin/productlist\",\n    className: \"goback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 18\n    }\n  }, \"Go Back\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"userEdit__form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, \"Edit Product\"), loadingUpdate && /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 35\n    }\n  }), errorUpdate && /*#__PURE__*/React.createElement(Message, {\n    severity: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 33\n    }\n  }, errorUpdate), loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 28\n    }\n  }) : error ? /*#__PURE__*/React.createElement(Message, {\n    severity: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 50\n    }\n  }, error) : /*#__PURE__*/React.createElement(ValidatorForm, {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    label: \"Product Name\",\n    onChange: e => setName(e.target.value),\n    name: \"name\",\n    value: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextValidator, {\n    label: \"Price\",\n    onChange: e => setPrice(e.target.value),\n    name: \"price\",\n    value: price,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextValidator, {\n    label: \"Image\",\n    onChange: e => setImage(e.target.value),\n    name: \"image\",\n    value: image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"upload-photo\",\n    name: \"upload-photo\",\n    type: \"file\",\n    onChange: uploadFileHandler,\n    inputProps: {\n      multiple: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 14\n    }\n  }, uploading && /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 35\n    }\n  })), /*#__PURE__*/React.createElement(TextValidator, {\n    label: \"Brand\",\n    onChange: e => setBrand(e.target.value),\n    name: \"brand\",\n    value: brand,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 14\n    }\n  }), /*#__PURE__*/React.createElement(TextValidator, {\n    label: \"Count In Stock\",\n    onChange: e => setCountInStock(e.target.value),\n    name: \"countInStock\",\n    value: countInStock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextValidator, {\n    label: \"Category\",\n    onChange: e => setCategory(e.target.value),\n    name: \"category\",\n    value: category,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextValidator, {\n    label: \"Description\",\n    onChange: e => setDescription(e.target.value),\n    name: \"description\",\n    value: description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    variant: \"contained\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, \"Update\")))));\n};\n\nexport default ProductEditScreen;","map":{"version":3,"sources":["G:/code/ecommerce/frontend/src/screens/ProductEditScreen.js"],"names":["axios","React","useState","useEffect","Link","useDispatch","useSelector","Message","Loader","FormContainer","ValidatorForm","TextValidator","Button","FormControlLabel","Input","TextField","listProductDetails","updateProduct","PRODUCT_UPDATE_RESET","ProductEditScreen","match","history","productId","params","id","name","setName","price","setPrice","image","setImage","brand","setBrand","category","setCategory","countInStock","setCountInStock","description","setDescription","uploading","setUploading","dispatch","productDetails","state","loading","error","product","productUpdate","loadingUpdate","errorUpdate","success","successUpdate","type","push","_id","uploadFileHandler","e","file","target","files","formData","FormData","append","config","headers","data","post","console","submitHandler","preventDefault","value","multiple"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,kCAA7C;AACA,OAAO,sBAAP;AACA,SAASC,MAAT,EAAiBC,gBAAjB,EAAmCC,KAAnC,EAA0CC,SAA1C,QAA2D,mBAA3D;AACA,OAAO,yBAAP;AACA,SAASC,kBAAT,EAA6BC,aAA7B,QAAkD,2BAAlD;AACA,SAASC,oBAAT,QAAqC,+BAArC;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAwB;AAC9C,QAAMC,SAAS,GAAGF,KAAK,CAACG,MAAN,CAAaC,EAA/B;AAEA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBxB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACyB,KAAD,EAAQC,QAAR,IAAoB1B,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAAC2B,KAAD,EAAQC,QAAR,IAAoB5B,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAC6B,KAAD,EAAQC,QAAR,IAAoB9B,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAC+B,QAAD,EAAWC,WAAX,IAA0BhC,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACiC,YAAD,EAAeC,eAAf,IAAkClC,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM,CAACmC,WAAD,EAAcC,cAAd,IAAgCpC,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACqC,SAAD,EAAYC,YAAZ,IAA4BtC,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAMuC,QAAQ,GAAGpC,WAAW,EAA5B;AAEA,QAAMqC,cAAc,GAAGpC,WAAW,CAACqC,KAAK,IAAIA,KAAK,CAACD,cAAhB,CAAlC;AACA,QAAM;AAAEE,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA8BJ,cAApC;AAEA,QAAMK,aAAa,GAAGzC,WAAW,CAACqC,KAAK,IAAIA,KAAK,CAACI,aAAhB,CAAjC;AACA,QAAM;AAAEH,IAAAA,OAAO,EAAEI,aAAX;AAA0BH,IAAAA,KAAK,EAAEI,WAAjC;AAA8CC,IAAAA,OAAO,EAAEC;AAAvD,MAA0EJ,aAAhF;AAGA5C,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGgD,aAAH,EAAiB;AACbV,MAAAA,QAAQ,CAAC;AAACW,QAAAA,IAAI,EAAElC;AAAP,OAAD,CAAR;AACAG,MAAAA,OAAO,CAACgC,IAAR,CAAa,oBAAb;AACH,KAHD,MAGK;AACD,UAAG,CAACP,OAAO,CAACrB,IAAT,IAAiBqB,OAAO,CAACQ,GAAR,KAAgBhC,SAApC,EAA8C;AAC1CmB,QAAAA,QAAQ,CAACzB,kBAAkB,CAACM,SAAD,CAAnB,CAAR;AACH,OAFD,MAEK;AACDI,QAAAA,OAAO,CAACoB,OAAO,CAACrB,IAAT,CAAP;AACAG,QAAAA,QAAQ,CAACkB,OAAO,CAACnB,KAAT,CAAR;AACAG,QAAAA,QAAQ,CAACgB,OAAO,CAACjB,KAAT,CAAR;AACAG,QAAAA,QAAQ,CAACc,OAAO,CAACf,KAAT,CAAR;AACAG,QAAAA,WAAW,CAACY,OAAO,CAACb,QAAT,CAAX;AACAG,QAAAA,eAAe,CAACU,OAAO,CAACX,YAAT,CAAf;AACAG,QAAAA,cAAc,CAACQ,OAAO,CAACT,WAAT,CAAd;AACH;AACJ;AAEA,GAlBI,EAkBF,CAACI,QAAD,EAAWpB,OAAX,EAAoBC,SAApB,EAA+BwB,OAA/B,EAAwCK,aAAxC,CAlBE,CAAT;;AAoBA,QAAMI,iBAAiB,GAAG,MAAOC,CAAP,IAAY;AAClC,UAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAb;AACA,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBL,IAAzB;AACAjB,IAAAA,YAAY,CAAC,IAAD,CAAZ;;AAEA,QAAI;AACA,YAAMuB,MAAM,GAAE;AACVC,QAAAA,OAAO,EAAC;AACR,0BAAgB;AADR;AADE,OAAd;AAKJ,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAMjE,KAAK,CAACkE,IAAN,CAAW,aAAX,EAA0BN,QAA1B,EAAoCG,MAApC,CAAvB;AAEAjC,MAAAA,QAAQ,CAACmC,IAAD,CAAR;AACAzB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACC,KAVD,CAUE,OAAOK,KAAP,EAAc;AACZsB,MAAAA,OAAO,CAACtB,KAAR,CAAcA,KAAd;AACAL,MAAAA,YAAY,CAAC,KAAD,CAAZ;AAEH;AACJ,GArBD;;AAwBA,QAAM4B,aAAa,GAAIZ,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACa,cAAF;AACA5B,IAAAA,QAAQ,CAACxB,aAAa,CAAC;AACnBqC,MAAAA,GAAG,EAAEhC,SADc;AAEnBG,MAAAA,IAFmB;AAGnBE,MAAAA,KAHmB;AAInBE,MAAAA,KAJmB;AAKnBE,MAAAA,KALmB;AAMnBE,MAAAA,QANmB;AAOnBI,MAAAA,WAPmB;AAQnBF,MAAAA;AARmB,KAAD,CAAd,CAAR;AAWH,GAbD;;AAeA,sBACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAK,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,oBAAT;AAA8B,IAAA,SAAS,EAAC,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAL,CADJ,eAEI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEKa,aAAa,iBAAI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFtB,EAGKC,WAAW,iBAAI,oBAAC,OAAD;AAAS,IAAA,QAAQ,EAAC,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BA,WAA3B,CAHpB,EAIKL,OAAO,gBAAG,oBAAE,MAAF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAiBC,KAAK,gBAAG,oBAAC,OAAD;AAAS,IAAA,QAAQ,EAAC,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BA,KAA3B,CAAH,gBAC9B,oBAAC,aAAD;AAAe,IAAA,QAAQ,EAAEuB,aAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,aAAD;AACA,IAAA,KAAK,EAAC,cADN;AAEA,IAAA,QAAQ,EAAGZ,CAAD,IAAO9B,OAAO,CAAC8B,CAAC,CAACE,MAAF,CAASY,KAAV,CAFxB;AAGA,IAAA,IAAI,EAAC,MAHL;AAIA,IAAA,KAAK,EAAE7C,IAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAQJ,oBAAC,aAAD;AACI,IAAA,KAAK,EAAC,OADV;AAEI,IAAA,QAAQ,EAAG+B,CAAD,IAAO5B,QAAQ,CAAC4B,CAAC,CAACE,MAAF,CAASY,KAAV,CAF7B;AAGI,IAAA,IAAI,EAAC,OAHT;AAII,IAAA,KAAK,EAAE3C,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARI,eAeJ,oBAAC,aAAD;AACI,IAAA,KAAK,EAAC,OADV;AAEI,IAAA,QAAQ,EAAG6B,CAAD,IAAO1B,QAAQ,CAAC0B,CAAC,CAACE,MAAF,CAASY,KAAV,CAF7B;AAGI,IAAA,IAAI,EAAC,OAHT;AAII,IAAA,KAAK,EAAEzC,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfI,eAsBH,oBAAC,KAAD;AACO,IAAA,EAAE,EAAC,cADV;AAEO,IAAA,IAAI,EAAC,cAFZ;AAGO,IAAA,IAAI,EAAC,MAHZ;AAIO,IAAA,QAAQ,EAAE0B,iBAJjB;AAKO,IAAA,UAAU,EAAE;AAAEgB,MAAAA,QAAQ,EAAE;AAAZ,KALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOQhC,SAAS,iBAAI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPrB,CAtBG,eAgCH,oBAAC,aAAD;AACG,IAAA,KAAK,EAAC,OADT;AAEG,IAAA,QAAQ,EAAGiB,CAAD,IAAOxB,QAAQ,CAACwB,CAAC,CAACE,MAAF,CAASY,KAAV,CAF5B;AAGG,IAAA,IAAI,EAAC,OAHR;AAIG,IAAA,KAAK,EAAEvC,KAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhCG,eAuCJ,oBAAC,aAAD;AACI,IAAA,KAAK,EAAC,gBADV;AAEI,IAAA,QAAQ,EAAGyB,CAAD,IAAOpB,eAAe,CAACoB,CAAC,CAACE,MAAF,CAASY,KAAV,CAFpC;AAGI,IAAA,IAAI,EAAC,cAHT;AAII,IAAA,KAAK,EAAEnC,YAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvCI,eA8CJ,oBAAC,aAAD;AACI,IAAA,KAAK,EAAC,UADV;AAEI,IAAA,QAAQ,EAAGqB,CAAD,IAAOtB,WAAW,CAACsB,CAAC,CAACE,MAAF,CAASY,KAAV,CAFhC;AAGI,IAAA,IAAI,EAAC,UAHT;AAII,IAAA,KAAK,EAAErC,QAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9CI,eAqDJ,oBAAC,aAAD;AACI,IAAA,KAAK,EAAC,aADV;AAEI,IAAA,QAAQ,EAAGuB,CAAD,IAAOlB,cAAc,CAACkB,CAAC,CAACE,MAAF,CAASY,KAAV,CAFnC;AAGI,IAAA,IAAI,EAAC,aAHT;AAII,IAAA,KAAK,EAAEjC,WAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArDI,eA4DJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5DI,eA6DJ,oBAAC,MAAD;AACI,IAAA,KAAK,EAAC,WADV;AAEI,IAAA,OAAO,EAAC,WAFZ;AAGI,IAAA,IAAI,EAAC,QAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA7DI,CALJ,CADA,CAFJ,CADJ;AAmFH,CAnKD;;AAqKA,eAAelB,iBAAf","sourcesContent":["import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport Message from \"../components/Message\"\r\nimport Loader from \"../components/Loader\"\r\nimport FormContainer from \"../components/FormContainer\"\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport \"./RegisterScreen.css\"\r\nimport { Button, FormControlLabel, Input, TextField } from '@material-ui/core'\r\nimport './ProductEditScreen.css'\r\nimport { listProductDetails, updateProduct } from \"../actions/productActions\"\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n    const productId = match.params.id\r\n    \r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate  } = productUpdate\r\n\r\n\r\n    useEffect(() => {\r\n        if(successUpdate){\r\n            dispatch({type: PRODUCT_UPDATE_RESET})\r\n            history.push('/admin/productlist')\r\n        }else{\r\n            if(!product.name || product._id !== productId){\r\n                dispatch(listProductDetails(productId))\r\n            }else{\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n            }\r\n        }\r\n            \r\n        }, [dispatch, history, productId, product, successUpdate])\r\n\r\n    const uploadFileHandler = async (e) =>{\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n        formData.append('image', file)\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config= {\r\n                headers:{\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }\r\n        const { data } = await axios.post('/api/upload', formData, config)\r\n\r\n        setImage(data)\r\n        setUploading(false)\r\n        } catch (error) {\r\n            console.error(error)\r\n            setUploading(false)\r\n            \r\n        }\r\n    }\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            description,\r\n            countInStock\r\n        }))\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"userEdit__container\">\r\n            <div><Link to=\"/admin/productlist\" className=\"goback\">Go Back</Link></div>\r\n            <div className=\"userEdit__form\">\r\n            <FormContainer>\r\n                <h2>Edit Product</h2>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message severity=\"error\">{errorUpdate}</Message>}\r\n                {loading ? < Loader /> : error ? <Message severity=\"error\">{error}</Message> : (\r\n                <ValidatorForm onSubmit={submitHandler}>\r\n                <TextValidator\r\n                label=\"Product Name\"\r\n                onChange={(e) => setName(e.target.value)}\r\n                name=\"name\"\r\n                value={name}\r\n            ></TextValidator>\r\n\r\n            <TextValidator\r\n                label=\"Price\"\r\n                onChange={(e) => setPrice(e.target.value)}\r\n                name=\"price\"\r\n                value={price}\r\n             ></TextValidator>\r\n\r\n            <TextValidator\r\n                label=\"Image\"\r\n                onChange={(e) => setImage(e.target.value)}\r\n                name=\"image\"\r\n                value={image}\r\n             > \r\n             </TextValidator>\r\n             <Input   \r\n                    id=\"upload-photo\"  \r\n                    name=\"upload-photo\"  \r\n                    type=\"file\"\r\n                    onChange={uploadFileHandler}\r\n                    inputProps={{ multiple: true }}\r\n                >\r\n                    {uploading && <Loader />}\r\n                </Input>\r\n\r\n             <TextValidator\r\n                label=\"Brand\"\r\n                onChange={(e) => setBrand(e.target.value)}\r\n                name=\"brand\"\r\n                value={brand}\r\n             ></TextValidator>\r\n\r\n            <TextValidator\r\n                label=\"Count In Stock\"\r\n                onChange={(e) => setCountInStock(e.target.value)}\r\n                name=\"countInStock\"\r\n                value={countInStock}\r\n             ></TextValidator>\r\n\r\n            <TextValidator\r\n                label=\"Category\"\r\n                onChange={(e) => setCategory(e.target.value)}\r\n                name=\"category\"\r\n                value={category}\r\n             ></TextValidator>\r\n\r\n            <TextValidator\r\n                label=\"Description\"\r\n                onChange={(e) => setDescription(e.target.value)}\r\n                name=\"description\"\r\n                value={description}\r\n             ></TextValidator>\r\n\r\n            <br />\r\n            <Button\r\n                color=\"secondary\"\r\n                variant=\"contained\"\r\n                type=\"submit\"  \r\n                >\r\n                Update\r\n            </Button>\r\n        </ValidatorForm>\r\n                )}\r\n        </FormContainer>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen\r\n"]},"metadata":{},"sourceType":"module"}