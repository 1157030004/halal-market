{"ast":null,"code":"var _jsxFileName = \"G:\\\\code\\\\ecommerce\\\\frontend\\\\src\\\\screens\\\\UserEditScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport FormContainer from \"../components/FormContainer\";\nimport { getUserDetails } from \"../actions/userActions\";\nimport \"./RegisterScreen.css\";\nimport { Button, FormControl, FormControlLabel, FormGroup, TextField } from '@material-ui/core';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport './UserEditScreen.css';\n\nconst UserEditScreen = ({\n  match,\n  history\n}) => {\n  const userId = match.params.id;\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n  const dispatch = useDispatch();\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  useEffect(() => {\n    if (!user.name || user._id !== userId) {\n      dispatch(getUserDetails(userId));\n    } else {\n      setName(user.name);\n      setEmail(user.email);\n      setIsAdmin(user.isAdmin);\n    }\n  }, [user]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"userEdit__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/admin/userlist\",\n    className: \"goback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 18\n    }\n  }, \"Go Back\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"userEdit__form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    component: \"fieldset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, \"Edit User\"), loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 28\n    }\n  }) : error ? /*#__PURE__*/React.createElement(Message, {\n    severity: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 50\n    }\n  }, error) : /*#__PURE__*/React.createElement(FormGroup, {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Full Name\",\n    onChange: e => setName(e.target.value),\n    name: \"name\",\n    value: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    label: \"Email\",\n    onChange: e => setEmail(e.target.value),\n    name: \"email\",\n    value: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    label: \"Is Admin\",\n    name: \"isAdmin\",\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 26\n      }\n    }),\n    onChange: e => setIsAdmin(e.target.checked),\n    checked: isAdmin,\n    value: isAdmin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    variant: \"contained\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, \"Update\")))));\n};\n\nexport default UserEditScreen;","map":{"version":3,"sources":["G:/code/ecommerce/frontend/src/screens/UserEditScreen.js"],"names":["React","useState","useEffect","Link","useDispatch","useSelector","Message","Loader","FormContainer","getUserDetails","Button","FormControl","FormControlLabel","FormGroup","TextField","ValidatorForm","TextValidator","Checkbox","UserEditScreen","match","history","userId","params","id","name","setName","email","setEmail","isAdmin","setIsAdmin","dispatch","userDetails","state","loading","error","user","_id","submitHandler","e","preventDefault","target","value","checked"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport Message from \"../components/Message\"\r\nimport Loader from \"../components/Loader\"\r\nimport FormContainer from \"../components/FormContainer\"\r\nimport { getUserDetails } from \"../actions/userActions\"\r\nimport \"./RegisterScreen.css\"\r\nimport { Button, FormControl, FormControlLabel, FormGroup, TextField } from '@material-ui/core'\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport './UserEditScreen.css'\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n\r\n    useEffect(() => {\r\n        if(!user.name || user._id !== userId){\r\n            dispatch(getUserDetails(userId))\r\n        }else{\r\n            setName(user.name)\r\n            setEmail(user.email)\r\n            setIsAdmin(user.isAdmin)\r\n        }\r\n    }, [user])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"userEdit__container\">\r\n            <div><Link to=\"/admin/userlist\" className=\"goback\">Go Back</Link></div>\r\n            <div className=\"userEdit__form\">\r\n            <FormControl  component=\"fieldset\">\r\n            \r\n                <h2>Edit User</h2>\r\n                {loading ? < Loader /> : error ? <Message severity=\"error\">{error}</Message> : (\r\n                <FormGroup onSubmit={submitHandler}>\r\n                <TextField\r\n                label=\"Full Name\"\r\n                onChange={(e) => setName(e.target.value)}\r\n                name=\"name\"\r\n                value={name}\r\n            ></TextField>\r\n\r\n            <TextField\r\n                label=\"Email\"\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                name=\"email\"\r\n                value={email}\r\n             ></TextField>\r\n\r\n            <FormControlLabel\r\n                label=\"Is Admin\"\r\n                name=\"isAdmin\"\r\n                control={<Checkbox />}\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n                checked={isAdmin}\r\n                value={isAdmin}            \r\n            ></FormControlLabel>\r\n\r\n            <br />\r\n            <Button\r\n                color=\"secondary\"\r\n                variant=\"contained\"\r\n                type=\"submit\">\r\n                Update\r\n            </Button>\r\n        </FormGroup>\r\n                )}\r\n        </FormControl>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserEditScreen\r\n"]},"metadata":{},"sourceType":"module"}