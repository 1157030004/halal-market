{"ast":null,"code":"import _slicedToArray from\"G:\\\\code\\\\ecommerce\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Link}from\"react-router-dom\";import{useDispatch,useSelector}from\"react-redux\";import Message from\"../components/Message\";import Loader from\"../components/Loader\";import FormContainer from\"../components/FormContainer\";import{register}from\"../actions/userActions\";import\"./RegisterScreen.css\";import{Button}from'@material-ui/core';import{ValidatorForm,TextValidator}from'react-material-ui-form-validator';var RegisterScreen=function RegisterScreen(_ref){var location=_ref.location,history=_ref.history;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),password=_useState6[0],setPassword=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),confirmPassword=_useState8[0],setConfirmPassword=_useState8[1];var _useState9=useState(null),_useState10=_slicedToArray(_useState9,2),message=_useState10[0],setMessage=_useState10[1];var dispatch=useDispatch();var userRegister=useSelector(function(state){return state.userRegister;});var loading=userRegister.loading,error=userRegister.error,userInfo=userRegister.userInfo;var redirect=location.search?location.search.split('=')[1]:'/';useEffect(function(){if(userInfo){history.push(redirect);}},[history,userInfo,redirect]);var submitHandler=function submitHandler(e){e.preventDefault();if(password!==confirmPassword){setMessage(\"Passwords do not match\");}else{dispatch(register(name,email,password));}};return/*#__PURE__*/React.createElement(FormContainer,null,/*#__PURE__*/React.createElement(ValidatorForm,{onSubmit:submitHandler},/*#__PURE__*/React.createElement(\"h2\",null,\"Sign Up\"),message&&/*#__PURE__*/React.createElement(Message,{severity:\"error\"},message),error&&/*#__PURE__*/React.createElement(Message,{severity:\"error\"},error),loading&&/*#__PURE__*/React.createElement(Loader,null),/*#__PURE__*/React.createElement(TextValidator,{label:\"Full Name\",onChange:function onChange(e){return setName(e.target.value);},name:\"name\",value:name// validators={['required']}\n// errorMessages={['this field is required']}\n}),/*#__PURE__*/React.createElement(TextValidator,{label:\"Email\",onChange:function onChange(e){return setEmail(e.target.value);},name:\"email\",value:email// validators={['required', 'isEmail']}\n// errorMessages={['this field is required', 'email is not valid']}\n}),/*#__PURE__*/React.createElement(TextValidator,{label:\"Password\",onChange:function onChange(e){return setPassword(e.target.value);},name:\"password\",type:\"password\",value:password// validators={['required']}\n// errorMessages={['this field is required']}\n}),/*#__PURE__*/React.createElement(TextValidator,{label:\"Confirm Password\",onChange:function onChange(e){return setConfirmPassword(e.target.value);},name:\"confirmPassword\",type:\"password\",value:confirmPassword// validators={['isPasswordMatch', 'required']}\n// errorMessages={['password mismatch', 'this field is required']}\n}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Button,{color:\"secondary\",variant:\"contained\",type:\"submit\"},\"Register\")),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h5\",null,\"Have an account? \",/*#__PURE__*/React.createElement(Link,{to:redirect?\"/login/redirect=\".concat(redirect):'/login'},\"Login\"))));};export default RegisterScreen;","map":{"version":3,"sources":["G:/code/ecommerce/frontend/src/screens/RegisterScreen.js"],"names":["React","useState","useEffect","Link","useDispatch","useSelector","Message","Loader","FormContainer","register","Button","ValidatorForm","TextValidator","RegisterScreen","location","history","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","dispatch","userRegister","state","loading","error","userInfo","redirect","search","split","push","submitHandler","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport Message from \"../components/Message\"\r\nimport Loader from \"../components/Loader\"\r\nimport FormContainer from \"../components/FormContainer\"\r\nimport { register } from \"../actions/userActions\"\r\nimport \"./RegisterScreen.css\"\r\nimport { Button } from '@material-ui/core'\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\n\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { loading, error, userInfo } = userRegister\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (password !== confirmPassword) {\r\n            setMessage(\"Passwords do not match\")\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <ValidatorForm onSubmit={submitHandler}>\r\n                <h2>Sign Up</h2>\r\n                {message && <Message severity='error'>{message}</Message>}\r\n                {error && <Message severity='error'>{error}</Message>}\r\n                {loading && <Loader />}\r\n                <TextValidator\r\n                    label=\"Full Name\"\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    name=\"name\"\r\n                    value={name}\r\n                // validators={['required']}\r\n                // errorMessages={['this field is required']}\r\n                ></TextValidator>\r\n\r\n                <TextValidator\r\n                    label=\"Email\"\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    name=\"email\"\r\n                    value={email}\r\n                // validators={['required', 'isEmail']}\r\n                // errorMessages={['this field is required', 'email is not valid']}\r\n                ></TextValidator>\r\n\r\n                <TextValidator\r\n                    label=\"Password\"\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    value={password}\r\n                // validators={['required']}\r\n                // errorMessages={['this field is required']}\r\n                ></TextValidator>\r\n\r\n                <TextValidator\r\n                    label=\"Confirm Password\"\r\n                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    name=\"confirmPassword\"\r\n                    type=\"password\"\r\n                    value={confirmPassword}\r\n                // validators={['isPasswordMatch', 'required']}\r\n                // errorMessages={['password mismatch', 'this field is required']}\r\n                ></TextValidator>\r\n                <br />\r\n                <Button\r\n                    color=\"secondary\"\r\n                    variant=\"contained\"\r\n                    type=\"submit\">\r\n                    Register\r\n                </Button>\r\n            </ValidatorForm>\r\n\r\n            <div>\r\n                <h5>Have an account? <Link to={redirect ? `/login/redirect=${redirect}`\r\n                    : '/login'}>Login</Link></h5>\r\n            </div>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n"]},"metadata":{},"sourceType":"module"}