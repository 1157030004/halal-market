{"ast":null,"code":"import _slicedToArray from\"G:\\\\code\\\\ecommerce\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import{Button,TextField}from'@material-ui/core';import React,{useState}from'react';import{useDispatch,useSelector}from\"react-redux\";import'./ShippingScreen.css';import{ValidatorForm,TextValidator}from'react-material-ui-form-validator';import{saveShippingAddress}from'../actions/cartActions';import CheckoutSteps from\"../components/CheckoutSteps\";var ShippingScreen=function ShippingScreen(_ref){var history=_ref.history;var cart=useSelector(function(state){return state.cart;});var shippingAddress=cart.shippingAddress;var _useState=useState(shippingAddress.address),_useState2=_slicedToArray(_useState,2),address=_useState2[0],setAddress=_useState2[1];var _useState3=useState(shippingAddress.city),_useState4=_slicedToArray(_useState3,2),city=_useState4[0],setCity=_useState4[1];var _useState5=useState(shippingAddress.postalCode),_useState6=_slicedToArray(_useState5,2),postalCode=_useState6[0],setPostalCode=_useState6[1];var _useState7=useState(shippingAddress.country),_useState8=_slicedToArray(_useState7,2),country=_useState8[0],setCountry=_useState8[1];var dispatch=useDispatch();var submitHandler=function submitHandler(e){e.preventDefault();dispatch(saveShippingAddress({address:address,city:city,postalCode:postalCode,country:country}));history.push('/payment');};return/*#__PURE__*/React.createElement(\"div\",{className:\"shipping\"},/*#__PURE__*/React.createElement(CheckoutSteps,{step1:true,step2:true}),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",null,\"Shipping\"),/*#__PURE__*/React.createElement(ValidatorForm,{className:\"form__container\",onSubmit:submitHandler},/*#__PURE__*/React.createElement(TextField,{className:\"shipping__input\",style:{width:\"195px\"},label:\"Address\",onChange:function onChange(e){return setAddress(e.target.value);},name:\"address\",required:true,multiline:true,rows:4,value:address}),/*#__PURE__*/React.createElement(TextValidator,{className:\"shipping__input\",label:\"City\",onChange:function onChange(e){return setCity(e.target.value);},name:\"city\",required:true,value:city}),/*#__PURE__*/React.createElement(TextValidator,{className:\"shipping__input\",label:\"Postal Code\",onChange:function onChange(e){return setPostalCode(e.target.value);},name:\"postalCode\",required:true,value:postalCode}),/*#__PURE__*/React.createElement(TextValidator,{className:\"shipping__input\",label:\"Country\",onChange:function onChange(e){return setCountry(e.target.value);},name:\"country\",required:true,value:country}),/*#__PURE__*/React.createElement(Button,{variant:\"contained\",type:\"submit\",color:\"secondary\",style:{width:\"100px\"}},\"Continue\"))));};export default ShippingScreen;","map":{"version":3,"sources":["G:/code/ecommerce/frontend/src/screens/ShippingScreen.js"],"names":["Button","TextField","React","useState","useDispatch","useSelector","ValidatorForm","TextValidator","saveShippingAddress","CheckoutSteps","ShippingScreen","history","cart","state","shippingAddress","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","dispatch","submitHandler","e","preventDefault","push","width","target","value"],"mappings":"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","sourcesContent":["import { Button, TextField } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport './ShippingScreen.css'\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\nimport CheckoutSteps from \"../components/CheckoutSteps\"\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({\r\n            address,\r\n            city,\r\n            postalCode,\r\n            country\r\n        }))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <div className=\"shipping\">\r\n            <CheckoutSteps step1 step2 />\r\n            <div>\r\n                <h1>Shipping</h1>\r\n                <ValidatorForm className=\"form__container\" onSubmit={submitHandler}>\r\n                    <TextField className=\"shipping__input\" style={{ width: \"195px\" }}\r\n                        label=\"Address\"\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                        name=\"address\"\r\n                        required\r\n                        multiline\r\n                        rows={4}\r\n                        value={address}>\r\n                    </TextField>\r\n                    <TextValidator className=\"shipping__input\"\r\n                        label=\"City\"\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                        name=\"city\"\r\n                        required\r\n                        value={city}>\r\n                    </TextValidator>\r\n                    <TextValidator className=\"shipping__input\"\r\n                        label=\"Postal Code\"\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                        name=\"postalCode\"\r\n                        required\r\n                        value={postalCode}>\r\n                    </TextValidator>\r\n                    <TextValidator className=\"shipping__input\"\r\n                        label=\"Country\"\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                        name=\"country\"\r\n                        required\r\n                        value={country}>\r\n                    </TextValidator>\r\n                    <Button variant=\"contained\" type=\"submit\" color=\"secondary\" style={{ width: \"100px\" }}>\r\n                        Continue\r\n                </Button>\r\n                </ValidatorForm>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n"]},"metadata":{},"sourceType":"module"}