{"ast":null,"code":"var _jsxFileName = \"G:\\\\code\\\\ecommerce\\\\frontend\\\\src\\\\screens\\\\UserEditScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport FormContainer from \"../components/FormContainer\";\nimport { getUserDetails } from \"../actions/userActions\";\nimport \"./RegisterScreen.css\";\nimport { Button } from '@material-ui/core';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport './UserEditScreen.css';\n\nconst UserEditScreen = ({\n  match,\n  history\n}) => {\n  const userId = match.params.id;\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n  const dispatch = useDispatch();\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  useEffect(() => {}, []);\n\n  const submitHandler = e => {\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"userEdit__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/admin/userlist\",\n    className: \"goback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"Go Back\"), /*#__PURE__*/React.createElement(FormContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, \"Edit User\"), loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 28\n    }\n  }) : error ? /*#__PURE__*/React.createElement(Message, {\n    severity: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 50\n    }\n  }, error) : /*#__PURE__*/React.createElement(ValidatorForm, {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    label: \"Full Name\",\n    onChange: e => setName(e.target.value),\n    name: \"name\",\n    value: name // validators={['required']}\n    // errorMessages={['this field is required']}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextValidator, {\n    label: \"Email\",\n    onChange: e => setEmail(e.target.value),\n    name: \"email\",\n    value: email // validators={['required', 'isEmail']}\n    // errorMessages={['this field is required', 'email is not valid']}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Checkbox, {\n    label: \"Is Admin\",\n    onChange: e => setIsAdmin(e.target.checked),\n    name: \"isAdmin\",\n    type: \"checkbox\",\n    checked: isAdmin,\n    value: isAdmin // validators={['required']}\n    // errorMessages={['this field is required']}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, \"Is Admin\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    variant: \"contained\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, \"Update\"))));\n};\n\nexport default UserEditScreen;","map":{"version":3,"sources":["G:/code/ecommerce/frontend/src/screens/UserEditScreen.js"],"names":["React","useState","useEffect","Link","useDispatch","useSelector","Message","Loader","FormContainer","getUserDetails","Button","ValidatorForm","TextValidator","Checkbox","UserEditScreen","match","history","userId","params","id","name","setName","email","setEmail","isAdmin","setIsAdmin","dispatch","userDetails","state","loading","error","user","submitHandler","e","preventDefault","target","value","checked"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport Message from \"../components/Message\"\r\nimport Loader from \"../components/Loader\"\r\nimport FormContainer from \"../components/FormContainer\"\r\nimport { getUserDetails } from \"../actions/userActions\"\r\nimport \"./RegisterScreen.css\"\r\nimport { Button } from '@material-ui/core'\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport './UserEditScreen.css'\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n\r\n    useEffect(() => {\r\n\r\n    }, [])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"userEdit__container\">\r\n            <Link to=\"/admin/userlist\" className=\"goback\">Go Back</Link>\r\n            <FormContainer>\r\n            \r\n                <h2>Edit User</h2>\r\n                {loading ? < Loader /> : error ? <Message severity=\"error\">{error}</Message> : (\r\n                <ValidatorForm onSubmit={submitHandler}>\r\n                <TextValidator\r\n                label=\"Full Name\"\r\n                onChange={(e) => setName(e.target.value)}\r\n                name=\"name\"\r\n                value={name}\r\n            // validators={['required']}\r\n            // errorMessages={['this field is required']}\r\n            ></TextValidator>\r\n\r\n            <TextValidator\r\n                label=\"Email\"\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                name=\"email\"\r\n                value={email}\r\n            // validators={['required', 'isEmail']}\r\n            // errorMessages={['this field is required', 'email is not valid']}\r\n            ></TextValidator>\r\n\r\n            <Checkbox\r\n                label=\"Is Admin\"\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n                name=\"isAdmin\"\r\n                type=\"checkbox\"\r\n                checked={isAdmin}\r\n                value={isAdmin}\r\n            // validators={['required']}\r\n            // errorMessages={['this field is required']}\r\n            >Is Admin</Checkbox>\r\n\r\n            <br />\r\n            <Button\r\n                color=\"secondary\"\r\n                variant=\"contained\"\r\n                type=\"submit\">\r\n                Update\r\n            </Button>\r\n        </ValidatorForm>\r\n                )}\r\n        </FormContainer>\r\n\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserEditScreen\r\n"]},"metadata":{},"sourceType":"module"}