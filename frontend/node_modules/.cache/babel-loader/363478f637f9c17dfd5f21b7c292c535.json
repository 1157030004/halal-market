{"ast":null,"code":"import axios from \"axios\";\nimport { ORDER_CREATE_SUCCESS, ORDER_CREATE_REQUEST, ORDER_CREATE_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL } from \"../constants/orderConstants\";\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'COntent-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token} `\n      }\n    };\n    const {\n      data\n    } = await axios.post(`api/orders`, order, config);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getOrderDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token} `\n      }\n    };\n    const {\n      data\n    } = await axios.get(`api/orders${id}`, order, config);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["G:/code/ecommerce/frontend/src/actions/orderActions.js"],"names":["axios","ORDER_CREATE_SUCCESS","ORDER_CREATE_REQUEST","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","createOrder","order","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","error","response","message","getOrderDetails","id","get"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,oBAAT,EAA+BC,oBAA/B,EAAqDC,iBAArD,EAAwEC,qBAAxE,EAA+FC,qBAA/F,EAAsHC,kBAAtH,QAAgJ,6BAAhJ;AAGA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAChE,MAAI;AACAD,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAET;AADD,KAAD,CAAR;AAIA,UAAM;AAAEU,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AAAb,QAA8BH,QAAQ,EAA5C;AAEA,UAAMI,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAELC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AAFnC;AADE,KAAf;AAOA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMlB,KAAK,CAACmB,IAAN,CAAY,YAAZ,EAAyBX,KAAzB,EAAgCM,MAAhC,CAAvB;AAEAL,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEV,oBADD;AAELmB,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAMH,GAtBD,CAsBE,OAAOG,KAAP,EAAc;AACZZ,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAER,iBADD;AAELiB,MAAAA,OAAO,EAAEC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GAAgDF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAApE,GAA8EF,KAAK,CAACE;AAFxF,KAAD,CAAR;AAIH;AACJ,CA7BM;AA+BP,OAAO,MAAMC,eAAe,GAAIC,EAAD,IAAQ,OAAOhB,QAAP,EAAiBC,QAAjB,KAA8B;AACjE,MAAI;AACAD,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEP;AADD,KAAD,CAAR;AAIA,UAAM;AAAEQ,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AAAb,QAA8BH,QAAQ,EAA5C;AAEA,UAAMI,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACLC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AADnC;AADE,KAAf;AAMA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMlB,KAAK,CAAC0B,GAAN,CAAW,aAAYD,EAAG,EAA1B,EAA6BjB,KAA7B,EAAoCM,MAApC,CAAvB;AAEAL,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEN,qBADD;AAELe,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAMH,GArBD,CAqBE,OAAOG,KAAP,EAAc;AACZZ,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEL,kBADD;AAELc,MAAAA,OAAO,EAAEC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GAAgDF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAApE,GAA8EF,KAAK,CAACE;AAFxF,KAAD,CAAR;AAIH;AACJ,CA5BM","sourcesContent":["import axios from \"axios\"\r\nimport { ORDER_CREATE_SUCCESS, ORDER_CREATE_REQUEST, ORDER_CREATE_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL } from \"../constants/orderConstants\"\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'COntent-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token} `\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(`api/orders`, order, config)\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token} `\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`api/orders${id}`, order, config)\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}