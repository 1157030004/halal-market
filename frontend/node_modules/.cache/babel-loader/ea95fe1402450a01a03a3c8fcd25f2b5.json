{"ast":null,"code":"import _slicedToArray from\"G:\\\\code\\\\ecommerce\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Link}from\"react-router-dom\";import{useDispatch,useSelector}from\"react-redux\";import Message from\"../components/Message\";import Loader from\"../components/Loader\";import FormContainer from\"../components/FormContainer\";import{ValidatorForm,TextValidator}from'react-material-ui-form-validator';import{getUserDetails,updateUser}from\"../actions/userActions\";import\"./RegisterScreen.css\";import{Button,FormControlLabel}from'@material-ui/core';import Checkbox from'@material-ui/core/Checkbox';import'./UserEditScreen.css';import{USER_UPDATE_RESET}from\"../constants/userConstants\";var UserEditScreen=function UserEditScreen(_ref){var match=_ref.match,history=_ref.history;var userId=match.params.id;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isAdmin=_useState6[0],setIsAdmin=_useState6[1];var dispatch=useDispatch();var userDetails=useSelector(function(state){return state.userDetails;});var loading=userDetails.loading,error=userDetails.error,user=userDetails.user;var userUpdate=useSelector(function(state){return state.userUpdate;});var loadingUpdate=userUpdate.loading,errorUpdate=userUpdate.error,successUpdate=userUpdate.success;useEffect(function(){if(successUpdate){dispatch({type:USER_UPDATE_RESET});history.push('/admin/userlist');}else{if(!user.name||user._id!==userId){dispatch(getUserDetails(userId));}else{setName(user.name);setEmail(user.email);setIsAdmin(user.isAdmin);}}},[dispatch,userId,user,successUpdate,history]);var submitHandler=function submitHandler(e){e.preventDefault();dispatch(updateUser({_id:userId,name:name,email:email,isAdmin:isAdmin}));};return/*#__PURE__*/React.createElement(\"div\",{className:\"userEdit__container\"},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Link,{to:\"/admin/userlist\",className:\"goback\"},\"Go Back\")),/*#__PURE__*/React.createElement(\"div\",{className:\"userEdit__form\"},/*#__PURE__*/React.createElement(FormContainer,null,/*#__PURE__*/React.createElement(\"h2\",null,\"Edit User\"),loadingUpdate&&/*#__PURE__*/React.createElement(Loader,null),errorUpdate&&/*#__PURE__*/React.createElement(Message,{severity:\"error\"},errorUpdate),loading?/*#__PURE__*/React.createElement(Loader,null):error?/*#__PURE__*/React.createElement(Message,{severity:\"error\"},error):/*#__PURE__*/React.createElement(ValidatorForm,{onSubmit:submitHandler},/*#__PURE__*/React.createElement(TextValidator,{label:\"Full Name\",onChange:function onChange(e){return setName(e.target.value);},name:\"name\",value:name}),/*#__PURE__*/React.createElement(TextValidator,{label:\"Email\",onChange:function onChange(e){return setEmail(e.target.value);},name:\"email\",value:email}),/*#__PURE__*/React.createElement(FormControlLabel,{label:\"Is Admin\",name:\"isAdmin\",control:/*#__PURE__*/React.createElement(Checkbox,null),onChange:function onChange(e){return setIsAdmin(e.target.checked);},checked:isAdmin,value:isAdmin}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Button,{color:\"secondary\",variant:\"contained\",type:\"submit\"},\"Update\")))));};export default UserEditScreen;","map":{"version":3,"sources":["G:/code/ecommerce/frontend/src/screens/UserEditScreen.js"],"names":["React","useState","useEffect","Link","useDispatch","useSelector","Message","Loader","FormContainer","ValidatorForm","TextValidator","getUserDetails","updateUser","Button","FormControlLabel","Checkbox","USER_UPDATE_RESET","UserEditScreen","match","history","userId","params","id","name","setName","email","setEmail","isAdmin","setIsAdmin","dispatch","userDetails","state","loading","error","user","userUpdate","loadingUpdate","errorUpdate","successUpdate","success","type","push","_id","submitHandler","e","preventDefault","target","value","checked"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport Message from \"../components/Message\"\r\nimport Loader from \"../components/Loader\"\r\nimport FormContainer from \"../components/FormContainer\"\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport { getUserDetails, updateUser } from \"../actions/userActions\"\r\nimport \"./RegisterScreen.css\"\r\nimport { Button, FormControlLabel } from '@material-ui/core'\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport './UserEditScreen.css'\r\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\"\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n    const userId = match.params.id\r\n    \r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { loading: loadingUpdate, error: errorUpdate, success:successUpdate } = userUpdate\r\n\r\n\r\n    useEffect(() => {\r\n        if(successUpdate){\r\n            dispatch({ type: USER_UPDATE_RESET })\r\n            history.push('/admin/userlist')\r\n        }else{\r\n            if(!user.name || user._id !== userId){\r\n                dispatch(getUserDetails(userId))\r\n            }else{\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n        \r\n    }, [dispatch, userId, user, successUpdate, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({ _id: userId, name, email, isAdmin }))\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"userEdit__container\">\r\n            <div><Link to=\"/admin/userlist\" className=\"goback\">Go Back</Link></div>\r\n            <div className=\"userEdit__form\">\r\n            <FormContainer>\r\n                <h2>Edit User</h2>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate &&  <Message severity='error'>{errorUpdate}</Message>}\r\n                {loading ? < Loader /> : error ? <Message severity=\"error\">{error}</Message> : (\r\n                <ValidatorForm onSubmit={submitHandler}>\r\n                <TextValidator\r\n                label=\"Full Name\"\r\n                onChange={(e) => setName(e.target.value)}\r\n                name=\"name\"\r\n                value={name}\r\n            ></TextValidator>\r\n\r\n            <TextValidator\r\n                label=\"Email\"\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                name=\"email\"\r\n                value={email}\r\n             ></TextValidator>\r\n\r\n            <FormControlLabel\r\n                label=\"Is Admin\"\r\n                name=\"isAdmin\"\r\n                control={<Checkbox />}\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n                checked={isAdmin}\r\n                value={isAdmin}            \r\n            ></FormControlLabel>\r\n\r\n            <br />\r\n            <Button\r\n                color=\"secondary\"\r\n                variant=\"contained\"\r\n                type=\"submit\"  \r\n                >\r\n                Update\r\n            </Button>\r\n        </ValidatorForm>\r\n                )}\r\n        </FormContainer>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserEditScreen\r\n"]},"metadata":{},"sourceType":"module"}