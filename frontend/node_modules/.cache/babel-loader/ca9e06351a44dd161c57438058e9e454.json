{"ast":null,"code":"var _jsxFileName = \"G:\\\\code\\\\ecommerce\\\\frontend\\\\src\\\\screens\\\\ProductEditScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport FormContainer from \"../components/FormContainer\";\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport \"./RegisterScreen.css\";\nimport { Button, FormControlLabel } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport './ProductEditScreen.css';\nimport { listProductDetails } from \"../actions/productActions\";\n\nconst ProductEditScreen = ({\n  match,\n  history\n}) => {\n  const productId = match.params.id;\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState(0);\n  const [image, setImage] = useState('');\n  const [brand, setBrand] = useState('');\n  const [category, setCategory] = useState('');\n  const [countInStock, setCountInStock] = useState(0);\n  const [description, setDescription] = useState('');\n  const dispatch = useDispatch();\n  const productDetails = useSelector(state => state.productDetails);\n  const {\n    loading,\n    error,\n    product\n  } = productDetails;\n  useEffect(() => {\n    if (!product.name || product._id !== productId) {\n      dispatch(listProductDetails(productId));\n    } else {\n      setName(product.name);\n      setPrice(product.price);\n      setImage(product.image);\n      setBrand(product.brand);\n      setCategory(product.category);\n      setCountInStock(product.countInStock);\n      setDescription(product.description);\n    }\n  }, [dispatch, history, productId, product]);\n\n  const submitHandler = e => {\n    e.preventDefault(); // UPDATE PRODUCT\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"userEdit__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/admin/productlist\",\n    className: \"goback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 18\n    }\n  }, \"Go Back\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"userEdit__form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, \"Edit Product\"), loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 28\n    }\n  }) : error ? /*#__PURE__*/React.createElement(Message, {\n    severity: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 50\n    }\n  }, error) : /*#__PURE__*/React.createElement(ValidatorForm, {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    label: \"Product Name\",\n    onChange: e => setName(e.target.value),\n    name: \"name\",\n    value: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextValidator, {\n    label: \"Price\",\n    onChange: e => setPrice(e.target.value),\n    name: \"price\",\n    value: price,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextValidator, {\n    label: \"Image\",\n    onChange: e => setImage(e.target.value),\n    name: \"image\",\n    value: image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextValidator, {\n    label: \"Brand\",\n    onChange: e => setBrand(e.target.value),\n    name: \"brand\",\n    value: brand,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 14\n    }\n  }), /*#__PURE__*/React.createElement(TextValidator, {\n    label: \"Count In Stock\",\n    onChange: e => setCountInStock(e.target.value),\n    name: \"countInStock\",\n    value: countInStock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextValidator, {\n    label: \"Category\",\n    onChange: e => setCategory(e.target.value),\n    name: \"category\",\n    value: category,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextValidator, {\n    label: \"Description\",\n    onChange: e => setDescription(e.target.value),\n    name: \"description\",\n    value: description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    variant: \"contained\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, \"Update\")))));\n};\n\nexport default ProductEditScreen;","map":{"version":3,"sources":["G:/code/ecommerce/frontend/src/screens/ProductEditScreen.js"],"names":["React","useState","useEffect","Link","useDispatch","useSelector","Message","Loader","FormContainer","ValidatorForm","TextValidator","Button","FormControlLabel","Checkbox","listProductDetails","ProductEditScreen","match","history","productId","params","id","name","setName","price","setPrice","image","setImage","brand","setBrand","category","setCategory","countInStock","setCountInStock","description","setDescription","dispatch","productDetails","state","loading","error","product","_id","submitHandler","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport Message from \"../components/Message\"\r\nimport Loader from \"../components/Loader\"\r\nimport FormContainer from \"../components/FormContainer\"\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport \"./RegisterScreen.css\"\r\nimport { Button, FormControlLabel } from '@material-ui/core'\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport './ProductEditScreen.css'\r\nimport { listProductDetails } from \"../actions/productActions\"\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n    const productId = match.params.id\r\n    \r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    useEffect(() => {\r\n            if(!product.name || product._id !== productId){\r\n                dispatch(listProductDetails(productId))\r\n            }else{\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n            }\r\n        }, [dispatch, history, productId, product])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        // UPDATE PRODUCT\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"userEdit__container\">\r\n            <div><Link to=\"/admin/productlist\" className=\"goback\">Go Back</Link></div>\r\n            <div className=\"userEdit__form\">\r\n            <FormContainer>\r\n                <h2>Edit Product</h2>\r\n                {loading ? < Loader /> : error ? <Message severity=\"error\">{error}</Message> : (\r\n                <ValidatorForm onSubmit={submitHandler}>\r\n                <TextValidator\r\n                label=\"Product Name\"\r\n                onChange={(e) => setName(e.target.value)}\r\n                name=\"name\"\r\n                value={name}\r\n            ></TextValidator>\r\n\r\n            <TextValidator\r\n                label=\"Price\"\r\n                onChange={(e) => setPrice(e.target.value)}\r\n                name=\"price\"\r\n                value={price}\r\n             ></TextValidator>\r\n\r\n            <TextValidator\r\n                label=\"Image\"\r\n                onChange={(e) => setImage(e.target.value)}\r\n                name=\"image\"\r\n                value={image}\r\n             ></TextValidator>\r\n             \r\n             <TextValidator\r\n                label=\"Brand\"\r\n                onChange={(e) => setBrand(e.target.value)}\r\n                name=\"brand\"\r\n                value={brand}\r\n             ></TextValidator>\r\n\r\n            <TextValidator\r\n                label=\"Count In Stock\"\r\n                onChange={(e) => setCountInStock(e.target.value)}\r\n                name=\"countInStock\"\r\n                value={countInStock}\r\n             ></TextValidator>\r\n\r\n            <TextValidator\r\n                label=\"Category\"\r\n                onChange={(e) => setCategory(e.target.value)}\r\n                name=\"category\"\r\n                value={category}\r\n             ></TextValidator>\r\n\r\n            <TextValidator\r\n                label=\"Description\"\r\n                onChange={(e) => setDescription(e.target.value)}\r\n                name=\"description\"\r\n                value={description}\r\n             ></TextValidator>\r\n\r\n            <br />\r\n            <Button\r\n                color=\"secondary\"\r\n                variant=\"contained\"\r\n                type=\"submit\"  \r\n                >\r\n                Update\r\n            </Button>\r\n        </ValidatorForm>\r\n                )}\r\n        </FormContainer>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen\r\n"]},"metadata":{},"sourceType":"module"}